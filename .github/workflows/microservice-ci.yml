name: Python Microservice

on:
  push:
    branches: ["main","develop"]
  pull_request:
    branches: ["main"]
permissions:
  contents: read

jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Build docker image (includes pip install inside Dockerfile)
      - name: Build Docker image
        run: docker build -t goodfood-microservice .

      # 3. Run tests with coverage
      - name: Run tests with coverage
        run: |
          docker run --rm \
            -e PYTHONPATH=. \
            -e MODEL_PATH=models/model_unquant.tflite \
            -v ${{ github.workspace }}:/app \
            goodfood-microservice \
            pytest --cov=./ --cov-report=xml:/app/coverage.xml
      # 4. Upload coverage to Codecov (warning only if fail)
      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false   # <-- chuyển thành warning

      # 5. Lint code
      - name: Lint with flake8
        run: |
          docker run --rm goodfood-microservice flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          docker run --rm goodfood-microservice flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      # 6. Security check with bandit
      - name: Security check with bandit
        run: docker run --rm goodfood-microservice bandit -r .
        continue-on-error: true

      # 7. Security check with Safety(dependencies)
      - name: Security with Safety
        run: docker run --rm goodfood-microservice safety check || true
        continue-on-error: true

      #8. Optional: Push Docker image to registry
      #- name: Login to Docker Hub
      #  run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      #- name: Push image
      #  run: docker push goodfood-microservice