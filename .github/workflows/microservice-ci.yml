name: Python Microservice

on:
  push:
    branches: ["main","develop"]
  pull_request:
    branches: ["main"]
permissions:
  contents: read

jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4
      
      # 2. Setup python
      - name: Setup python
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      # 3. Cache pip dependencies
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # 4. Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest pytest-cov bandit safety
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      # 5. Lint code
      - name: Lint with flake8
        run: |
          # strict check (fail if errors)
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # style check (only warnings)
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      
      # 6. Run tests with coverage
      - name: Run tests with coverage
        run: |
          export PYTHONPATH=.
          export MODEL_PATH=models/model_unquant.tflite
          pytest --cov=./ --cov-report=xml

      # 7. Upload coverage to Codecov
      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          fail_ci_if_error: true

      # 8. Security check with bandit
      - name: Security check with bandit
        run: bandit -r .

      # 9. Security check with Safety(dependencies)
      - name: Security with Safety
        run: safety check || true

      # 10. Build docker image to validate Dockerfile
      - name: Build Docker image
        run: docker build -t goodfood-microservice .

      #8. Optional: Push Docker image to registry
      #- name: Login to Docker Hub
      #  run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      #- name: Push image
      #  run: docker push goodfood-microservice